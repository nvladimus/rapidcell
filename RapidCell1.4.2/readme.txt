Welcome to rapid and accurate simulations of bacterial chemotaxisHow to run RapidCell1. unzip the archive to a folder RapidCell2. if you are Windows user, double click on RapidCellwin.exe file. If not, open terminal and enter   $ cd YOUR_FOLDER/RapidCell   $ java -cp ./bin Run3. Set the input and output parameters you like, and press Run button.4. After RapidCell is complete, the output is written into 2 txt-files (tab-delimited):individuals.out (variables of individual cells over time)averages.out    (variables over time, averaged over the population)5. Analyse either file in Matlab, Python, R, or in any other software that imports text files (Excel also does the job).TroubleshootingIf on step 2 you get an error while you try java command, make sure you have Java installed on your computer. Check your Java here: http://java.com/en/download/installed.jspIf you try to simulate 1,000,000 cells or so and you get an error         java.lang.OutOfMemoryError: Java heap spacethen run java with the appropriate memory allocation arguments (min memory 32 Mb, max memory 512 Mb):    $ java -Xms32m -Xmx512m -cp ./bin RunNew in this version (1.4)1) CheA autophosphorylation is added based on steady-state equations. The fraction of active CheA in adapted state is 0.0164, in agreement with (Sourjik, Berg, PNAS, 2002, 99(20), suppl.)2) P_on, the probability of receptor cluster to be ON, is set to 1/3, as suggested by FRET experiments (attractant addition causes about twice less response than attractant removal)3) P_on is available for output4) Most parameters of the network can be changed using GUI.5) Design was improved and simple graphical output added for convenient control of initial and final cell positions on arena.Current limitations1) Cells are simulated in 2D space, and it is designed intentionally to avoid excessive computation.2) CheB activity is assumed constant. In reality, CheB has positive feedback from CheA activity via phosphorylation, so the system response (CheYp) adapts to negative stimuli faster than to positive ones. This presumably reduces tumbling time of a cell in escape response. The current model is accurate for positive responses, such as swimming in attractants.3) Accordingly, only attractants are currently simulated by the program. Repellents or temperature gradients are no implemented, but can be added by motivated users.Questions, suggestions: <nikita.vladimirov@gmail.com>